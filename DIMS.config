params {
    scripts_dir = "$projectDir/CustomModules/DIMS/AddOnFunctions/" 
    // scripts_dir = "$moduleDir/AddOnFunctions/"
    tools_dir = "/hpc/dbg_mz/tools/db"
    hmdb_db_file = "$params.tools_dir/HMDB_add_iso_corrected_V2.RData"
    relevance_file = "$params.tools_dir/HMDB_with_info_relevance_corrected_V2.RData"
    hmdb_parts_files = "$params.tools_dir/NF_hmdb_parts/"
    path_metabolite_groups = "/hpc/dbg_mz/tools/db/metabolite_groups"
    file_ratios_metabolites = "/hpc/dbg_mz/tools/db/dIEM/Ratios_between_metabolites.csv"
    file_expected_biomarkers_IEM = "/hpc/dbg_mz/tools/db/dIEM/Expected_biomarkers_IEM.csv"
    file_explanation = "/hpc/dbg_mz/tools/Explanation_violin_plots.txt"
    file_isomers = "/hpc/dbg_mz/tools/isomers.txt"
    trim = 0.1
    thresh = 2000
    cluster_options = "--mail-user $params.email --mail-type FAIL --account=dbg_mz"
}

process {
   withLabel: AssignToBins {
        cpus = 2
        memory = { 2.GB * task.attempt }
        time = { 2.m * task.attempt }
    }

    withLabel: AverageTechReplicates {
        cpus = 2
        memory = { 2.GB * task.attempt }
        time =  { 30.m * task.attempt }
/*
        publishDir {
            path = "$params.outdir/Bioinformatics"
            mode = 'link'
            pattern = '*.{txt, pdf}'
        }
        publishDir {
            path = "$params.outdir/Bioinformatics/RData"
            mode = 'link'
            pattern = '*replication_pattern.RData'
        }
        publishDir = [
            [path: "$params.outdir/Bioinformatics", mode: 'link', pattern: '*.{txt, pdf}'],
            [path: "$params.outdir/Bioinformatics/RData", mode: 'link', pattern: '*replication_pattern.RData']
        ]
*/

    }

    withLabel: CollectFilled {
        cpus = 2
        memory = { 2.GB * task.attempt }
        time = { 4.m * task.attempt }
/*
        publishDir {
            path = "$params.outdir/Bioinformatics"
            mode = 'link'
            pattern = 'outlist_identified_*.txt'
        }
        publishDir {
            path = "$params.outdir/Bioinformatics/RData"
            mode = 'link'
            pattern = 'outlist_identified_*.RData'
        }
        publishDir = [
            [path: "$params.outdir/Bioinformatics", mode: 'link', pattern = 'outlist_identified_*.txt'],
            [path: "$params.outdir/Bioinformatics/RData", mode: 'link', pattern: 'outlist_identified_*.RData']
        ]
*/
    }
    
    withLabel: CollectSumAdducts {
        cpus = 2
        memory = { 1.GB * task.attempt }
        time = { 1.m * task.attempt }

        publishDir {
            path = "$params.outdir/Bioinformatics/RData"
            mode = 'link'
            pattern = 'AdductSums*.RData'
        }
    }

    withLabel: FillMissing {
        cpus = 2
        memory = { 1.GB * task.attempt }
        time = { 2.m * task.attempt }
    }

    withLabel: GenerateBreaks {
        cpus = 2
        memory = { 1.GB * task.attempt }
        time =  { 2.m * task.attempt }
    }

    withLabel: GenerateExcel {
        cpus = 2
        memory = { 10.GB * task.attempt }
        time = { 10.m * task.attempt }

        publishDir {
            path = "$params.outdir/Bioinformatics"
            mode = 'link'
            pattern = '*.{txt, xlsx}'
        }
        publishDir {
            path = "$params.outdir/Bioinformatics/RData"
            mode = 'link'
            pattern = '*IS_results.RData'
        }
        publishDir {
            pattern = "/plots/*png" 
            mode = 'link' 
            path = "$params.outdir/Bioinformatics"
        }
    }

    withLabel: GenerateViolin {
        cpus = 2
        memory = { 1.GB * task.attempt }
        time = { 20.m * task.attempt }

        publishDir {
            path = "$params.outdir/Bioinformatics/dIEM"
            mode = 'link'
            pattern = '*.{txt, xlsx}'
        }
        publishDir diem_plot_files, mode = 'link', path = "$params.outdir/Bioinformatics/dIEM/dIEM_plots"
        publishDir diag_plot_files, mode = 'link', path = "$params.outdir/Bioinformatics/dIEM/Diagnostics"
        publishDir other_plot_files, mode = 'link', path = "$params.outdir/Bioinformatics/dIEM/Other"
    }

    withLabel: HMDBparts {
        cpus = 2
        memory = { 2.GB * task.attempt }
        time = { 60.m * task.attempt }
    }

    withLabel: HMDBparts_main {
        cpus = 2
        memory = { 2.GB * task.attempt }
        time = { 4.m * task.attempt }
    }

    withLabel: PeakFinding {
        cpus = 2
        memory = { 1.GB * task.attempt }
        time = { 10.m * task.attempt }
    }

    withLabel: PeakGrouping {
        cpus = 2
        memory = { 1.GB * task.attempt }
        time = { 30.m * task.attempt }
    }

    withLabel: SpectrumPeakFinding {
        cpus = 2
        memory = { 1.GB * task.attempt }
        time = { 1.m * task.attempt }
    }

    withLabel: SumAdducts {
        cpus = 2
        memory = { 4.GB * task.attempt }
        time = { 40.m * task.attempt }
    }

    withLabel: ThermoRawFileParser_1_1_11 {
        cpus = 2
        memory = { 2.GB * task.attempt }
        time = { 5.m * task.attempt }
    }

    withLabel: UnidentifiedCalcZscores {
        cpus = 2
        memory = { 10.GB * task.attempt }
        time = { 10.m * task.attempt }

        publishDir {
            path = "$params.outdir/Bioinformatics/RData"
            mode = 'link'
            pattern = '*.RData'
        }
    }

    withLabel: UnidentifiedCollectPeaks {
        cpus = 2
        memory = { 1.GB * task.attempt }
        time = { 2.m * task.attempt }
    }

    withLabel: UnidentifiedFillMissing {
        cpus = 2
        memory = { 10.GB * task.attempt }
        time = { 15.m * task.attempt }
    }

    withLabel: UnidentifiedPeakGrouping {
        cpus = 2
        memory = { 5.GB * task.attempt }
        time = { 300.m * task.attempt }
    }

    withLabel: VersionLog {
        cpus = 2
        memory = { 1.GB * task.attempt }
        time = { 5.m * task.attempt }

        publishDir {
            path = "$params.outdir/log"
            mode = 'link'
        }
    }
}

report {
    enabled = true
    file = "$params.outdir/log/nextflow_report.html"
}

trace {
    enabled = true
    overwrite = true
    file = "$params.outdir/log/nextflow_trace.txt"
    fields = 'task_id,hash,native_id,process,tag,name,status,exit,module,container,cpus,time,disk,memory,attempt,submit,start,complete,duration,realtime,queue,%cpu,%mem'
}

timeline {
    enabled = true
    file = "$params.outdir/log/nextflow_timeline.html"
}

profiles {

    slurm {
        process {
            executor = 'slurm'
            queue = 'cpu'
            clusterOptions = "$params.cluster_options"
            errorStrategy = 'retry'
            maxRetries = 1
        }

        singularity {
            enabled = true
            runOptions = '-B /hpc/dbg_mz:/hpc/dbg_mz -B $TMPDIR:$TMPDIR'
            autoMounts = true
            cacheDir = '/hpc/dbg_mz/tools/singularity_cache'
        }

        executor {
            queueSize = 1000
            pollInterval = '1min'
            queueStatInterval = '5min'
            submitRatelimit = '10sec'
        }

        mail {
            smtp.host = 'localhost'
        }
    }
}

