help(plotTIC)
library("xcms")
help(plotTIC)
help(plot)
runApp()
runApp()
runApp()
setwd("E:/Metabolomics/DIMS_interface/HPCpost/dims_gui")
dir.create("output", showWarnings = FALSE)
dir.create("output/data", showWarnings = FALSE)
# files = df[input$inCheckboxGroup,]
# save(files, file="files.RData")
outputDir = paste(getwd(), "output/data", sep="/")
# message(outputDir)
# write.table(files, file=paste(paste(getwd(), "output", sep="/"), "sampleNames.txt", sep="/"), quote = FALSE, sep="\t",row.names = FALSE)
# df[input$inCheckboxGroup,]
# write.table(df[input$inCheckboxGroup,], file=paste(paste(getwd(), "output", sep="/"), "sampleNames.txt", sep="/"), quote = FALSE, sep="\t",row.names = FALSE)
# # files=paste(root, path, paste(as.vector(unlist(files[, 1])),"raw", sep="."), sep="/")
files=paste(root, path, paste(as.vector(unlist(df[input$inCheckboxGroup, 1])),"raw", sep="."), sep="/")
# output$samples = renderTable({ as.data.frame(files) })
unlink(paste(getwd(), "output/data", list.files(path = paste(getwd(), "output/data", sep="/")), sep="/"))
unlink(paste(getwd(), "output/TIC", list.files(path = paste(getwd(), "output/TIC", sep="/")), sep="/"))
# ################################## user settings ####################################################################
# mail_address = "\"a.m.willemsen-8@umcutrecht.nl\""
# msconvert = "\"C:/Program Files/ProteoWizard/ProteoWizard 3.0.10738/msconvert.exe\""
# pscp = "\"C:/Program Files (x86)/Putty/pscp.exe\" -pw ***REMOVED*** -r -p "
# putty = "\"C:/Program Files (x86)/Putty/putty.exe\" -ssh mwillemsen@hpcsubmit.op.umcutrecht.nl -pw ***REMOVED*** -m "
# hpc_pipeline = "mwillemsen@hpct02.op.umcutrecht.nl:/hpc/shared/dbg_mz/marcel/Direct-Infusion-Pipeline_2.1"
# #root = "Z:/Metabolomics"
root = "E:/Metabolomics/DIMS_interface"
dir.create("output", showWarnings = FALSE)
dir.create("output/data", showWarnings = FALSE)
# files = df[input$inCheckboxGroup,]
# save(files, file="files.RData")
outputDir = paste(getwd(), "output/data", sep="/")
# message(outputDir)
# write.table(files, file=paste(paste(getwd(), "output", sep="/"), "sampleNames.txt", sep="/"), quote = FALSE, sep="\t",row.names = FALSE)
# df[input$inCheckboxGroup,]
# write.table(df[input$inCheckboxGroup,], file=paste(paste(getwd(), "output", sep="/"), "sampleNames.txt", sep="/"), quote = FALSE, sep="\t",row.names = FALSE)
# # files=paste(root, path, paste(as.vector(unlist(files[, 1])),"raw", sep="."), sep="/")
files=paste(root, path, paste(as.vector(unlist(df[input$inCheckboxGroup, 1])),"raw", sep="."), sep="/")
# output$samples = renderTable({ as.data.frame(files) })
unlink(paste(getwd(), "output/data", list.files(path = paste(getwd(), "output/data", sep="/")), sep="/"))
unlink(paste(getwd(), "output/TIC", list.files(path = paste(getwd(), "output/TIC", sep="/")), sep="/"))
# plot TICS
xmlfiles = list.files(paste(getwd(),"output/data", sep = "/"))
xmlfiles
getwd()
runApp()
# plot TICS
xmlfiles = list.files(paste(getwd(),"output/data", sep = "/"))
xmlfiles
i=1
rawCtrl = xcmsRaw(paste(getwd(),"output/data", xmlfiles[i], sep = "/"), profstep=0.01)
runApp()
runApp()
runApp()
runApp()
runApp()
help(do.call)
help(tagList)
runApp()
help(local)
setwd("E:/Metabolomics/DIMS_interface/HPCpost/dims_gui")
files = list.files(paste(getwd(),"output/TIC", sep = "/"))
files_path = paste(getwd(),"output/TIC", files, sep = "/")
files_path
renderUI({
if(is.null(files_path)) return(NULL)
image_output_list <-
lapply(1:length(files_path),
function(i)
{
imagename = paste0("image", i)
imageOutput(imagename)
})
# print(image_output_list)
do.call(tagList, image_output_list)
})
image_output_list <-
lapply(1:length(files_path),
function(i)
{
imagename = paste0("image", i)
imageOutput(imagename)
})
image_output_list
do.call(tagList, image_output_list)
help(imageOutput)
runApp()
runApp()
help(clickOpts)
runApp()
runApp()
runApp()
runApp()
install.packages("shinyjs")
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
paste(getwd(),"remove.jpg", sep = "/")
runApp()
runApp()
runApp()
help(shinyjs::reset)
help("shinyjs::reset")
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp('dims_gui')
mail_address = "\"a.m.willemsen-8@umcutrecht.nl\""
script = paste("#!/bin/bash
scanmode=$1
echo \"To do!\" | mail -a \"DIMS.pipeline@HPC\" -s \"DIMS data processing in $scanmode scanmode has finished!\" -c", mail_address)
message(script)
getwd()
setwd("E:/Metabolomics/DIMS_interface/HPCpost/dims_gui")
fileConn = file(paste(getwd(), "output/mail.sh", sep = "/"))
writeLines(script, fileConn)
close(fileConn)
script = paste0("#!/bin/bash
scanmode=$1
echo \"To do!\" | mail -a \"DIMS.pipeline@HPC\" -s \"DIMS data processing in $scanmode scanmode has finished!\" -c ", mail_address)
message(script)
fileConn = file(paste(getwd(), "output/mail.sh", sep = "/"))
writeLines(script, fileConn)
close(fileConn)
msconvert = "\"C:/Program Files/ProteoWizard/ProteoWizard 3.0.11748/msconvert.exe\""
pscp = "\"C:/Program Files/PuTTY/PSCP/pscp.exe\" -pw ***REMOVED*** -r -p "
putty = "\"C:/Program Files/PuTTY/putty.exe\" -ssh mwillemsen@hpcsubmit.op.umcutrecht.nl -pw ***REMOVED*** -m "
hpc_pipeline = "mwillemsen@hpct02.op.umcutrecht.nl:/hpc/shared/dbg_mz/marcel/DIMSinDiagnostics"
system("cmd.exe",
input = paste(pscp, paste(getwd(), "output\\mail.sh", sep="\\"), paste(hpc_pipeline, "scripts", sep="/")),
ignore.stderr=FALSE)
script = paste0("#!/bin/bash
scanmode=$1
echo \"To do!\" | mail -s \"DIMS data processing in $scanmode scanmode has finished!\" -c ", mail_address)
message(script)
fileConn = file(paste(getwd(), "output/mail.sh", sep = "/"))
writeLines(script, fileConn)
close(fileConn)
system("cmd.exe",
input = paste(pscp, paste(getwd(), "output\\mail.sh", sep="\\"), paste(hpc_pipeline, "scripts", sep="/")),
ignore.stderr=FALSE)
shiny::runApp('dims_gui')
runApp('dims_gui')
runApp('dims_gui')
shiny::runApp('dims_gui')
shiny::runApp('dims_gui')
runApp('dims_gui')
runApp('dims_gui')
shiny::runApp('dims_gui')
getwd()
setwd("E:/Metabolomics/DIMS_interface/HPCpost/dims_gui")
runApp()
getwd()
load("files.RData")
files
#################################################################################################################################################
#save(nsampgrps, repl.pattern, groupNames, sampleNames, file=paste(getwd(), "output/init.RData", sep="/"))
load(paste(getwd(), "output/init.RData", sep="/"))
sampleNames
which(files$File_Name %in% sampleNames)
which(sampleNames %in% files$File_Name)
!which(sampleNames %in% files$File_Name)
which(sampleNames !%in% files$File_Name)
which(sampleNames %in% files$File_Name)
remove = 1:length(sampleNames)
remove = which(sampleNames %in% files$File_Name)
remove
sampleNames = sampleNames[-remove]
sampleNames
load(paste(getwd(), "output/init.RData", sep="/"))
load("files.RData")
remove = which(sampleNames %in% files$File_Name)
rval = NULL
if (length(remove)>0) rval = removeFromRepl.pat(sampleNames[-remove], repl.pattern, groupNames, nrepl)
nrepl=3
source("./HPCPostFunctions.R")
load(paste(getwd(), "output/init.RData", sep="/"))
load("files.RData")
remove = which(sampleNames %in% files$File_Name)
rval = NULL
if (length(remove)>0) rval = removeFromRepl.pat(sampleNames[-remove], repl.pattern, groupNames, nrepl)
rval
rval$groupNames
length(rval$pattern)
length(rval$pattern)
rval$groupNames
length(rval$groupNames)
rval$pattern
load(paste(getwd(), "output/init.RData", sep="/"))
load("files.RData")
remove = which(sampleNames %in% files$File_Name)
rval = NULL
if (length(remove)>0) rval = removeFromRepl.pat(sampleNames[-remove], repl.pattern, groupNames, nrepl)
length(rval$pattern)
length(rval$groupNames)
source("./HPCPostFunctions.R")
load(paste(getwd(), "output/init.RData", sep="/"))
load("files.RData")
remove = which(sampleNames %in% files$File_Name)
rval = NULL
if (length(remove)>0) rval = removeFromRepl.pat(sampleNames[-remove], repl.pattern, groupNames, nrepl)
rval$pattern
rval$groupNames
length(rval$groupNames)
length(sampleNames)
length(files$File_Name)
load(paste(getwd(), "output/init.RData", sep="/"))
load("files.RData")
remove = which(sampleNames %in% files$File_Name)
rval = NULL
if (length(remove)>0) rval = removeFromRepl.pat(sampleNames[-remove], repl.pattern, groupNames, nrepl)
save(nsampgrps=length(rval$pattern),
repl.pattern=rval$pattern,
groupNames=rval$groupNames,
sampleNames=files$File_Name,
file=paste(getwd(), "output/init.RData", sep="/"))
#################################################################################################################################################
#save(nsampgrps, repl.pattern, groupNames, sampleNames, file=paste(getwd(), "output/init.RData", sep="/"))
load(paste(getwd(), "output/init.RData", sep="/"))
load("files.RData")
remove = which(sampleNames %in% files$File_Name)
rval = NULL
if (length(remove)>0) rval = removeFromRepl.pat(sampleNames[-remove], repl.pattern, groupNames, nrepl)
length(rval$pattern)
rval$pattern
rval$groupNames
files$File_Name
#################################################################################################################################################
#save(nsampgrps, repl.pattern, groupNames, sampleNames, file=paste(getwd(), "output/init.RData", sep="/"))
load(paste(getwd(), "output/init.RData", sep="/"))
length(sampleNames)
load(paste(getwd(), "output/init.RData", sep="/"))
load("files.RData")
remove = which(sampleNames %in% files$File_Name)
rval = NULL
if (length(remove)>0) rval = removeFromRepl.pat(sampleNames[-remove], repl.pattern, groupNames, nrepl)
save(nsampgrps=length(rval$pattern),
repl.pattern=rval$pattern,
groupNames=rval$groupNames,
sampleNames=files$File_Name,
file=paste(getwd(), "output/init.RData", sep="/"))
load(paste(getwd(), "output/init.RData", sep="/"))
load("files.RData")
remove = which(sampleNames %in% files$File_Name)
rval = NULL
if (length(remove)>0) rval = removeFromRepl.pat(sampleNames[-remove], repl.pattern, groupNames, nrepl)
save(nsampgrps=length(rval$pattern),
repl.pattern=rval$pattern,
groupNames=rval$groupNames,
sampleNames=files$File_Name,
file=paste(getwd(), "output/init.RData", sep="/"))
save(nsampgrps=length(rval$pattern), repl.pattern=rval$pattern, groupNames=rval$groupNames, sampleNames=files$File_Name, file=paste(getwd(), "output/init.RData", sep="/"))
length(rval$pattern)
rval$pattern
rval$groupNames
files$File_Name
paste(getwd(), "output/init.RData", sep="/")
save(nsampgrps=length(rval$pattern), repl.pattern=rval$pattern, groupNames=rval$groupNames, sampleNames=files$File_Name, file=paste(getwd(), "output/init.RData", sep="/"))
nsampgrps=length(rval$pattern)
repl.pattern=rval$pattern
groupNames=rval$groupNames
sampleNames=files$File_Name
save(nsampgrps, repl.pattern, groupNames, sampleNames, file=paste(getwd(), "output/init.RData", sep="/"))
#################################################################################################################################################
#save(nsampgrps, repl.pattern, groupNames, sampleNames, file=paste(getwd(), "output/init.RData", sep="/"))
load(paste(getwd(), "output/init.RData", sep="/"))
nsampgrps
repl.pattern
groupNames
length(groupNames)
sampleNames
length(sampleNames)
runApp()
load("files.RData")
files
files
getwd()
selectedSamples=files
files
load(paste(getwd(), "output/init.RData", sep="/"))
remove = which(sampleNames %in% selectedSamples$File_Name)
remove
rval = NULL
if (length(remove)>0) rval = removeFromRepl.pat(sampleNames[-remove], repl.pattern, groupNames, nrepl)
nsampgrps=length(rval$pattern)
repl.pattern=rval$pattern
groupNames=rval$groupNames
sampleNames=files$File_Name
save(nsampgrps, repl.pattern, groupNames, sampleNames, file=paste(getwd(), "output/init.RData", sep="/"))
shiny::runApp('dims_gui')
load("E:/Metabolomics/DIMS_interface/HPCpost/dims_gui/files.RData")
files$File_Name
runApp('dims_gui')
load("E:/Metabolomics/DIMS_interface/HPCpost/dims_gui/output/init.RData")
repl.pattern
groupNames
nsampgrps
sampleNames
runApp('dims_gui')
setwd("E:/Metabolomics/DIMS_interface/HPCpost/dims_gui")
script = paste0("#!/bin/bash\n", path, "\ncd \nmkdir ./results \nls -h")
message(script)
path = "/hpc/shared/dbg_mz/marcel/Direct-Infusion-Pipeline_2.1_2"
pscp = "\"C:/Program Files/PuTTY/PSCP/pscp.exe\" -pw ***REMOVED*** -r -p "
putty = "\"C:/Program Files/PuTTY/putty.exe\" -ssh mwillemsen@hpcsubmit.op.umcutrecht.nl -pw ***REMOVED*** -m "
script = paste0("#!/bin/bash\n", path, "\ncd \nmkdir ./results \nls -h")
message(script)
script = paste0("#!/bin/bash\n \ncd ", path, " \nmkdir ./results \nls -h")
message(script)
script = paste0("#!/bin/bash\n cd ", path, " \nmkdir ./results \nls -h")
message(script)
script = paste0("#!/bin/bash\ncd ", path, " \nmkdir ./results \nls -h")
message(script)
script = paste0("#!/bin/bash\ncd ", path, " \nmkdir ./results")
message(script)
fileConn = file(paste(getwd(), "output/putty_cmds_1.txt", sep = "/"))
writeLines(script, fileConn)
close(fileConn)
system("cmd.exe",
input = paste0(putty, paste(getwd(), "output/putty_cmds_1.txt", sep="/")),
ignore.stderr=FALSE)
################################## user settings ####################################################################
mail_address = "\"a.m.willemsen-8@umcutrecht.nl\""
script = paste0("#!/bin/bash\nscanmode=$1\necho \"To do!\" | mail -s \"DIMS data processing in $scanmode scanmode has finished!\" -c ", mail_address)
message(script)
################################## user settings ####################################################################
#mail_address = "\"a.m.willemsen-8@umcutrecht.nl\""
mail_address = "a.m.willemsen-8@umcutrecht.nl"
script = paste0("#!/bin/bash\nscanmode=$1\necho \"To do!\" | mail -s \"DIMS data processing in $scanmode scanmode has finished!\" -c ", mail_address)
message(script)
fileConn = file(paste(getwd(), "output/mail.sh", sep = "/"))
writeLines(script, fileConn)
close(fileConn)
script = paste0("#!/bin/bash\ncd ", path, "\nmkdir ./results")
message(script)
user = "mwillemsen"
home = "marcel"
#mail_address = "\"a.m.willemsen-8@umcutrecht.nl\""
mail_address = "a.m.willemsen-8@umcutrecht.nl"
msconvert = "\"C:/Program Files/ProteoWizard/ProteoWizard 3.0.11748/msconvert.exe\""
pscp = "\"C:/Program Files/PuTTY/PSCP/pscp.exe\" -pw ***REMOVED*** -r -p "
putty = "\"C:/Program Files/PuTTY/putty.exe\" -ssh mwillemsen@hpcsubmit.op.umcutrecht.nl -pw ***REMOVED*** -m "
# \\ds.umcutrecht.nl\data\BG\metab
root = "Z:/Metabolomics/Metabolomics Projects/Projects 2015/Research Metabolic/Project 2015_011_SinglePatients"
path = paste0("/hpc/shared/dbg_mz/", home, "/Direct-Infusion-Pipeline_2.1_2")
# hpc_pipeline = "mwillemsen@hpct02.op.umcutrecht.nl:/hpc/shared/dbg_mz/marcel/DIMSinDiagnostics"
hpc_pipeline = paste0(user, "@hpct02.op.umcutrecht.nl:", path)
user
home
mail_address
root
path
hpc_pipeline
script = paste0("#!/bin/bash\ncd", path, "\nmkdir ./results")
message(script)
script = paste0("#!/bin/bash\ncd ", path, "\nmkdir ./results")
message(script)
script = paste0("#!/bin/bash\ncd ", path, "\nsh ./run.sh\nsleep 10s\nqstat -u ", user, "\nsleep 20s")
message(script)
shiny::runApp()
runApp()
shiny::runApp('dims_gui')
runApp('dims_gui')
runApp('dims_gui')
runApp('dims_gui')
shiny::runApp('dims_gui')
runApp('dims_gui')
shiny::runApp('dims_gui')
runApp('dims_gui')
runApp('dims_gui')
runApp('dims_gui')
runApp('dims_gui')
load("E:/Metabolomics/DIMS_interface/RES_DBS_20180312_026.RData")
dim(pklist)
runApp('dims_gui')
runApp('dims_gui')
runApp('dims_gui')
runApp('dims_gui')
shiny::runApp('dims_gui')
shiny::runApp('dims_gui')
shiny::runApp('dims_gui')
shiny::runApp('dims_gui')
shiny::runApp('dims_gui')
shiny::runApp('dims_gui')
shiny::runApp('dims_gui')
runApp('dims_gui')
setwd("E:/Metabolomics/DIMS_interface/HPCpost/dims_gui")
load(paste(getwd(), "output/init.RData", sep="/"))
sampleNames = as.vector(unlist(repl.pattern))
sampleNames
groupNames = names(repl.pattern)
groupNames
remove = which(sampleNames %in% selectedSamples$File_Name)
rval = NULL
if (length(remove)>0) rval = removeFromRepl.pat(sampleNames[-remove], repl.pattern, groupNames, nrepl)
# nsampgrps=length(rval$pattern)
repl.pattern=rval$pattern
runApp()
load("E:/Metabolomics/DIMS_interface/HPCpost/dims_gui/tmp/init.RData")
repl.pattern
help(file.remove)
shiny::runApp('dims_gui')
runApp('dims_gui')
paste0(getwd(), "/output/init.RData")
runApp('dims_gui')
runApp('dims_gui')
setwd("E:/Metabolomics/DIMS_interface/HPCpost/dims_gui")
library("xcms")
library("Cairo")
source("./HPCPostFunctions.R")
nrepl=3
width=512 #1024
height=384 #768
for (i in 1:length(xmlfiles)) {
rawCtrl = xcmsRaw(paste(getwd(),"output/data", xmlfiles[i], sep = "/"), profstep=0.01)
if (class(rawCtrl) == "try-error") {
message(paste("Bad file:", xmlfiles[i]))
next
}
# extract sample name
sample=unlist(strsplit(xmlfiles[i], ".",fixed = T))[1]
CairoPNG(filename=paste(outdir, paste(sample, "png", sep="."), sep="/"), width, height)
plotTIC(rawCtrl, ident=TRUE, msident=TRUE) # waits for mouse input; hit Esc
dev.off()
}
xmlfiles = list.files(paste(getwd(),"output/data", sep = "/"))
outdir = paste(getwd(), "output/TIC", sep="/")
dir.create(outdir, showWarnings = FALSE)
for (i in 1:length(xmlfiles)) {
rawCtrl = xcmsRaw(paste(getwd(),"output/data", xmlfiles[i], sep = "/"), profstep=0.01)
if (class(rawCtrl) == "try-error") {
message(paste("Bad file:", xmlfiles[i]))
next
}
# extract sample name
sample=unlist(strsplit(xmlfiles[i], ".",fixed = T))[1]
CairoPNG(filename=paste(outdir, paste(sample, "png", sep="."), sep="/"), width, height)
plotTIC(rawCtrl, ident=TRUE, msident=TRUE) # waits for mouse input; hit Esc
dev.off()
}
shiny::runApp('dims_gui')
runApp('dims_gui')
runApp('dims_gui')
runApp('dims_gui')
runApp('dims_gui')
shiny::runApp('dims_gui')
runApp('dims_gui')
shiny::runApp('dims_gui')
shiny::runApp('dims_gui')
load("E:/Metabolomics/DIMS_interface/HPCpost/dims_gui/output/init.RData")
shiny::runApp('dims_gui')
runApp('dims_gui')
load("E:/Metabolomics/DIMS_interface/HPCpost/dims_gui/output/init.RData")
repl.pattern
length(repl.pattern)
shiny::runApp('dims_gui')
load("E:/Metabolomics/projects/DIMS_interface/HPCpost/dims_gui/output/init.RData")
names(repl.pattern)
unlist(repl.pattern)
length(unlist(repl.pattern))
head(repl.pattern)
shiny::runApp('dims_gui')
load("E:/Metabolomics/projects/DIMS_interface/HPCpost/dims_gui/output/init.RData")
head(repl.pattern)
length(unlist(repl.pattern))
shiny::runApp('dims_gui')
runApp('dims_gui')
shiny::runApp('dims_gui')
shiny::runApp('dims_gui')
shiny::runApp('dims_gui')
runApp('dims_gui')
runApp('dims_gui')
shiny::runApp('dims_gui')
shiny::runApp('dims_gui')
shiny::runApp('dims_gui')
runApp('dims_gui')
runApp('dims_gui')
(3/17)^27
3/17
shiny::runApp('dims_gui')
runApp('dims_gui')
shiny::runApp('dims_gui')
shiny::runApp('dims_gui')
runApp('dims_gui')
runApp('dims_gui')
runApp('dims_gui')
runApp('dims_gui')
load("E:/Metabolomics/projects/DIMS_Shiny_interface/HPCpost/dims_gui/output/init.RData")
repl.pattern
library("shiny")
library("shinyFiles")
library("xcms")
library("Cairo")
install.packages("")
install.packages("shinyFiles")
library("shiny")
library("shinyFiles")
library("xcms")
library("Cairo")
shiny::runApp('dims_gui')
runApp('dims_gui')
runApp('dims_gui')
